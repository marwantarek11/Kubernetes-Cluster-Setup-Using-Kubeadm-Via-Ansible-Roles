- name: Install dependencies (Debian)
  ansible.builtin.apt:
    name:
      - curl
      - gnupg
      - software-properties-common
      - ca-certificates
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install dependencies (RedHat)
  ansible.builtin.yum:
    name:
      - curl
      - gnupg
      - yum-utils
      - ca-certificates
      - device-mapper-persistent-data
      - lvm2
    state: present
    update_cache: yes
  when: ansible_os_family == "RedHat"

- name: Add Docker GPG key (Debian)
  ansible.builtin.apt_key:
    url: "{{ docker_gpg_key_Debian_url }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker GPG key (RedHat)
  ansible.builtin.rpm_key:
    key: "{{ docker_gpg_key_RedHat_url }}"
    state: present
  when: ansible_os_family == "RedHat"

- name: Add Docker repository (Debian)
  ansible.builtin.apt_repository:
    repo: "{{ docker_repo_debian }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker CE repository (RedHat)
  ansible.builtin.command: sudo yum-config-manager --add-repo "{{ docker_repo_redhat }}"
  when: ansible_os_family == "RedHat"


- name: Install containerd
  ansible.builtin.package:
    name: containerd.io
    state: present

- name: Configure containerd
  ansible.builtin.command: containerd config default
  register: containerd_config
  
- name: Set value of SystemdCgroup
  ansible.builtin.shell: |
    containerd config default | sudo tee /etc/containerd/config.toml | grep SystemdCgroup
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml  

- name: Restart and enable containerd
  ansible.builtin.systemd:
    name: containerd
    enabled: yes
    state: restarted
